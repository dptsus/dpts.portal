@using DPTS.Web.Models
@model AddressViewModel

@Html.HiddenFor(model => model.id)
<div class="tg-bordertop tg-haslayout">
    <div class="tg-formsection">
        <div class="tg-heading-border tg-small">
            <h3>Add Address</h3>
        </div>
        <div class="row">
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Hospital)
                    @Html.EditorFor(model => model.Hospital, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Hospital)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address1)
                    @Html.EditorFor(model => model.Address1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address1)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address2)
                    @Html.EditorFor(model => model.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address2)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.City)
                    @Html.EditorFor(model => model.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Countryid)
                    @Html.DropDownListFor(model => model.Countryid, Model.AvailableCountry, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Countryid)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateProvinceid)
                    @Html.DropDownListFor(model => model.StateProvinceid, Model.AvailableStateProvince, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateProvinceid)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ZipPostalCode)
                    @Html.EditorFor(model => model.ZipPostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ZipPostalCode)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.LandlineNumber)
                    @Html.EditorFor(model => model.LandlineNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LandlineNumber)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Website)
                    @Html.EditorFor(model => model.Website, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Website)
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.FaxNumber)
                    @Html.EditorFor(model => model.FaxNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FaxNumber)
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    $(function () {
        $("#CountryId").change(function () {
            var selectedItem = $(this).val();
            var ddlStates = $("#StateProvinceId");
            //  var statesProgress = $("#states-loading-progress");
            // statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetStatesByCountryid"))",
                data: { "countryId": selectedItem, "addSelectStateItem": "true" },
            success: function (data) {
                ddlStates.html('');
                $.each(data, function (id, option) {
                    ddlStates.append($('<option></option>').val(option.id).html(option.name));
                });
                statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
               // statesProgress.hide();
            }
        });
    });
    });

</script>